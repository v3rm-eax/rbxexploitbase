#define _CRT_NONSTDC_NO_WARNINGS
#define _CRT_SECURE_NO_WARNINGS
#include <Windows.h>
#include <string>
#include <vector>
#include <sstream>
#include <iterator>
#include <iostream>
#include "FFBT.h"
#include "memory.h"
#include "ScanFunctions.h"
#include "luadefines.h"

/*
This is a source of one of my first few exploits I created, and yes I agree the code is disgusting 
and very sloppey! Bare in mind not everything here is my code for example the return check bypass,
scanner, console bypass and so on. If this source is used in any way I would appreciate some credits.
That's all for now enjoy studying nasty code.
*/


inline void ConsoleCheck() { //this is the bypass to the console check that was implemented a while ago.
	//set the instruction to ret so that it does returns and does nothing.
	int *consolehaxx = (int*)GetProcAddress(GetModuleHandle("kernel32.dll"), "FreeConsole");
	DWORD consolehax;
	VirtualProtect(consolehaxx, 1, PAGE_EXECUTE_READWRITE, &consolehax);
	*consolehaxx = 0xC3;
	VirtualProtect(consolehaxx, 1, consolehax, &consolehax);
}


inline void Console() {
	ConsoleCheck(); //here we apply the bypass so roadblox doesn't bust our ass!
	AllocConsole();
	SetConsoleTitleA("FF & Btools Exploit Created By eax"); //this will be your console title
	freopen("CONOUT$", "w", stdout);
	freopen("CONIN$", "r", stdin);
	HWND ConsoleHandle = GetConsoleWindow();
	::ShowWindow(ConsoleHandle, SW_SHOW);
}

void Scan() 
{
	ScriptContext = memory::scan((char*)&ScriptContextAddress); //here we scan for scriptcontext.
	DataModel = ScriptContext + 0x123; //here we grab datamodel by getting the parent offset of ScriptContext.
	LuaState = *(DWORD*)(ScriptContext + 0x5QUASHEDB33F) - (ScriptContext + 0x5QUASHEDB33F); //this is the lua state, very easy to find when in pseudo code.
}

void main()
{
	Console(); //enables the console to show up doh!
	printf("Welcome to FF & Btools Exploit Created By eax\r\n"); //this prints text to the console
	printf("Exploit will scan now!\r\n");//^^
	Scan(); //executes the scan function
	Sleep(2000); //Sleep for 2 seconds
	printf("Scan finished! Enjoy the Exploit!\r\n");
	Sleep(100); //sleep for 1 ms

/*
  Execute(); //magic!
  this is the function to execute the commands it's stored in another header file which
  is not included in this github ;(
*/

 //main() ends here
}

BOOL APIENTRY DllMain(HMODULE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH: {
		DisableThreadLibraryCalls(hModule);
		CreateThread(NULL, NULL, (LPTHREAD_START_ROUTINE)main, NULL, NULL, NULL);
		break;
	}
	case DLL_THREAD_ATTACH:
	case DLL_THREAD_DETACH:
	case DLL_PROCESS_DETACH: break;
	}
	return true;
}
